name: Release

on:
  # Trigger the workflow on the new 'v*' tag created
  push:
    tags:
      - "v*"

jobs:
  create_release:
    name: Create Github Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  build_artifact:
    needs: [create_release]
    name: ${{ matrix.os }}/GHC ${{ matrix.ghc }}/${{ github.ref }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest]
        ghc:
          - "9.2.5"
        cabal: ["3.6.3.0"]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-haskell@v1
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}

      - name: Check out code
        uses: actions/checkout@v2

      - name: Set tag name
        uses: olegtarasov/get-tag@v2.1.2
        id: tag
        with:
          tagRegex: "v(.*)"

      - name: Freeze
        run: |
          cabal update
          cabal freeze

      - name: Cache
        uses: actions/cache@v3
        env:
          cache-name: cache-stack
        with:
          path: ~/.stack-work
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('stack.yml') }}-${{ hashFiles('package.yml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Build binary
        run: |
          brew install pcre
          mkdir dist
          cabal install exe:far --ghc-options='-optl-static -optl-pthread' --install-method=copy --overwrite-policy=always --installdir=dist

      - name: Set binary path name
        run: echo "::set-env name=BINARY_PATH::./dist/far${{ env.EXT }}"
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true

      - name: Compress binary
        uses: svenstaro/upx-action@2.0.1
        with:
          file: ${{ env.BINARY_PATH }}

      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url

      - name: Get Release File Name & Upload URL
        id: get_release_info
        run: |
          echo "::set-output name=upload_url::$(cat release_url/release_url.txt)"

      - name: Upload Release Asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ${{ env.BINARY_PATH }}
          asset_name: far-${{ steps.tag.outputs.tag }}-${{ runner.os }}-ghc-${{ matrix.ghc }}${{ env.EXT }}
          asset_content_type: application/octet-stream
      - name: Done
        run: |
          echo "Uploaded to ${{steps.upload_release_asset.outputs.browser_download_url}}"
